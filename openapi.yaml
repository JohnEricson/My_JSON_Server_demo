openapi: 3.0.1
info:
  title: Johns API
  version: '1.0'
  description: This is Johns API to test Insomnia and RESTful API development
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
servers:
  - url: https://my-json-server.typicode.com/JohnEricson/My_JSON_Server_demo/
    variables: {}
    description: Johns public interactive demo server
  - url: http://localhost:3000/
    variables: {}
    description: My local server
paths:
  /vehicles:
    get:
      summary: Returns a list of vehicles.
      description: Optional extended description in CommonMark or HTML.
      operationId: getVehicles
      responses:
        '200':
          description: A JSON array of vehicle names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      tags:
        - vehicles
  /heroes:
    get:
      summary: Returns a list of heroes.
      description: Optional extended description in CommonMark or HTML.
      operationId: getHeroes
      responses:
        '200':
          description: A JSON array of heroes names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    vehicleId:
                      type: integer
                    skills:
                      type: array
                      items:
                        type: object
      tags:
        - heroes
  /heroes/{heroId}:
    get:
      summary: Get a hero by ID
      parameters:
        - in: path
          name: heroId
          schema:
            type: integer
          required: true
          description: Numeric ID of the hero to get
      responses:
        '200':
          description: A JSON object of hero
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
      tags:
        - heroes
  /posts:
    get:
      summary: Returns a list of posts.
      description: Optional extended description in CommonMark or HTML.
      operationId: getPosts
      responses:
        '200':
          description: A JSON array of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      tags:
        - post
    post:
      summary: Create a new post
      description: Store new post on the server.
      operationId: createPost
      requestBody:
        required: true
        content:
          applicaton/json:
            schema:
              $ref: '#/components/schemas/NewPostBody'
      responses:
        '2XX':
          description: new post successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBody'
        default:
          description: Default error sample response
      tags:
        - post
  /posts/{postId}:
    summary: post level operations
    description: fetch, update, delete a post
    parameters:
      - $ref: '#/components/parameters/PostId'
    get:
      summary: fetch one post
      description: fetch a post from the server
      operationId: fetchPost
      responses:
        2XX:
          $ref: '#/components/responses/PostResp'
        default:
          description: Default error sample response
components:
  parameters:
    PostId:
      name: postId
      in: path
      required: true
      schema:
        type: integer
        example: 1
        minimum: 0
  requestBodies:
    PostReq:
      description: post body sent to server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewPostBody'
  responses:
    PostResp:
      description: post body sent from server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostBody'
  schemas:
    NewPostBody:
      type: object
      properties:
        id:
          type: integer
          example: 45
        title:
          type: string
          example: my new post
    PostBody:
      type: object
      properties:
        id:
          type: integer
          example: 45
        title:
          type: string
          example: my new post
        author:
          type: string
          example: me